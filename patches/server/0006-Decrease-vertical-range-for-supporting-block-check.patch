From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Thu, 6 Jul 2023 08:07:46 -0700
Subject: [PATCH] Decrease vertical range for supporting block check

Drops the overall block lookups from ~15 down to 5 for a player entity.

Roughly 10mspt improvement for 10,000 cows all within a 15 block radius of the player.

diff --git a/src/main/java/dev/yive/pluto/PlutoConfig.java b/src/main/java/dev/yive/pluto/PlutoConfig.java
index 29192b350cb8638acf2c35480eb4ce603523f31e..cf463751006b7d4dc4e7251b51c8d7f4b4497481 100644
--- a/src/main/java/dev/yive/pluto/PlutoConfig.java
+++ b/src/main/java/dev/yive/pluto/PlutoConfig.java
@@ -202,5 +202,10 @@ public class PlutoConfig {
         private void shouldUseCustomNameOptimisation() {
             useCustomNameOptimisation = getBoolean("entities.global.use-custom-name-api-optimisation", useCustomNameOptimisation);
         }
+
+        public boolean useSupportingBlockLookupOptimisation = true;
+        private void shouldUseSupportingBlockLookupOptimisation() {
+            useSupportingBlockLookupOptimisation = getBoolean("entities.global.use-supporting-block-lookup-optimisation", useSupportingBlockLookupOptimisation);
+        }
     }
 }
diff --git a/src/main/java/net/minecraft/world/level/BlockCollisions.java b/src/main/java/net/minecraft/world/level/BlockCollisions.java
index cd89623a44f02d7db77f0d0f87545cf80841f403..1d25d86d4893304d02266264a9656207d852fddd 100644
--- a/src/main/java/net/minecraft/world/level/BlockCollisions.java
+++ b/src/main/java/net/minecraft/world/level/BlockCollisions.java
@@ -32,6 +32,12 @@ public class BlockCollisions<T> extends AbstractIterator<T> {
     public BlockCollisions(
         CollisionGetter world, @Nullable Entity entity, AABB box, boolean forEntity, BiFunction<BlockPos.MutableBlockPos, VoxelShape, T> resultFunction
     ) {
+    // Pluto start - Decrease vertical range for supporting block check
+        this(world, entity, box, forEntity, resultFunction, false);
+    }
+
+    public BlockCollisions(CollisionGetter world, @Nullable Entity entity, AABB box, boolean forEntity, BiFunction<BlockPos.MutableBlockPos, VoxelShape, T> resultFunction, boolean shrinkVerticalRange) {
+    // Pluto end - Decrease vertical range for supporting block check
         this.context = entity == null ? CollisionContext.empty() : CollisionContext.of(entity);
         this.pos = new BlockPos.MutableBlockPos();
         this.entityShape = Shapes.create(box);
@@ -45,6 +51,12 @@ public class BlockCollisions<T> extends AbstractIterator<T> {
         int l = Mth.floor(box.maxY + 1.0E-7) + 1;
         int m = Mth.floor(box.minZ - 1.0E-7) - 1;
         int n = Mth.floor(box.maxZ + 1.0E-7) + 1;
+        // Pluto start - Decrease vertical range for supporting block check
+        if (shrinkVerticalRange && entity != null && entity.level().plutoConfig().useSupportingBlockLookupOptimisation) {
+            k = Mth.floor(box.minY - 1.0E-7);
+            l = Mth.floor(box.minY);
+        }
+        // Pluto end - Decrease vertical range for supporting block check
         this.cursor = new Cursor3D(i, k, m, j, l, n);
     }
 
diff --git a/src/main/java/net/minecraft/world/level/CollisionGetter.java b/src/main/java/net/minecraft/world/level/CollisionGetter.java
index 1ad0c976c6e2d6d31397dff850a9de7c16d16fba..da6a1105eecbb435e1d7c1b088d6df911a6d93da 100644
--- a/src/main/java/net/minecraft/world/level/CollisionGetter.java
+++ b/src/main/java/net/minecraft/world/level/CollisionGetter.java
@@ -105,7 +105,7 @@ public interface CollisionGetter extends BlockGetter {
     default Optional<BlockPos> findSupportingBlock(Entity entity, AABB box) {
         BlockPos blockPos = null;
         double d = Double.MAX_VALUE;
-        BlockCollisions<BlockPos> blockCollisions = new BlockCollisions<>(this, entity, box, false, (pos, voxelShape) -> pos);
+        BlockCollisions<BlockPos> blockCollisions = new BlockCollisions<>(this, entity, box, false, (pos, voxelShape) -> pos, true); // Pluto - Decrease vertical range for supporting block check
 
         while (blockCollisions.hasNext()) {
             BlockPos blockPos2 = blockCollisions.next();
