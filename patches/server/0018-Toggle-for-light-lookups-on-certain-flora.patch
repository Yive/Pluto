From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Thu, 25 Jan 2024 13:09:20 -0800
Subject: [PATCH] Toggle for light lookups on certain flora

Pulled from my old 1.8/1.12 forks

diff --git a/src/main/java/dev/yive/pluto/PlutoConfig.java b/src/main/java/dev/yive/pluto/PlutoConfig.java
index ea2d0e800724569d8e641989dc9205a5ac24f7a6..96b151c9aa0bf4c3435db084c66936e4948b7655 100644
--- a/src/main/java/dev/yive/pluto/PlutoConfig.java
+++ b/src/main/java/dev/yive/pluto/PlutoConfig.java
@@ -291,5 +291,24 @@ public class PlutoConfig {
             itemMergeMovingInterval = getInt("entities.item.merge-check-moving-interval", itemMergeMovingInterval);
             itemMergeStaticInterval = getInt("entities.item.merge-check-static-interval", itemMergeStaticInterval);
         }
+
+        public boolean cropIgnoreLightLevel = false;
+        public boolean mushroomIgnoreLightLevel = false;
+        public boolean stemIgnoreLightLevel = false;
+        public boolean bambooSaplingIgnoreLightLevel = false;
+        public boolean bambooStalkIgnoreLightLevel = false;
+        public boolean sweetBerryBushIgnoreLightLevel = false;
+        public boolean saplingIgnoreLightLevel = false;
+        public boolean pitcherCropIgnoreLightLevel = false;
+        private void ignoreLightLevels() {
+            cropIgnoreLightLevel = getBoolean("blocks.crops.ignore-light-level", cropIgnoreLightLevel);
+            mushroomIgnoreLightLevel = getBoolean("blocks.mushroom.ignore-light-level", mushroomIgnoreLightLevel);
+            stemIgnoreLightLevel = getBoolean("blocks.stems.ignore-light-level", stemIgnoreLightLevel);
+            bambooSaplingIgnoreLightLevel = getBoolean("blocks.bamboo-sapling.ignore-light-level", bambooSaplingIgnoreLightLevel);
+            bambooStalkIgnoreLightLevel = getBoolean("blocks.bamboo-stalk.ignore-light-level", bambooStalkIgnoreLightLevel);
+            sweetBerryBushIgnoreLightLevel = getBoolean("blocks.sweet-berry-bush.ignore-light-level", sweetBerryBushIgnoreLightLevel);
+            saplingIgnoreLightLevel = getBoolean("blocks.sapling.ignore-light-level", saplingIgnoreLightLevel);
+            pitcherCropIgnoreLightLevel = getBoolean("blocks.pitcher-plant.ignore-light-level", pitcherCropIgnoreLightLevel);
+        }
     }
 }
diff --git a/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java b/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java
index ac0881f64ef98ea92d32b600c08c77aa3442a410..f022eff779bbd35221b6cf43ee2bd14a2b2e2035 100644
--- a/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java
@@ -45,7 +45,7 @@ public class BambooSaplingBlock extends Block implements BonemealableBlock {
 
     @Override
     protected void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && world.getRawBrightness(pos.above(), 0) >= 9) { // Spigot - SPIGOT-7159: Better modifier resolution
+        if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && (world.plutoConfig().bambooSaplingIgnoreLightLevel || world.getRawBrightness(pos.above(), 0) >= 9)) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
             this.growBamboo(world, pos);
         }
 
diff --git a/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java b/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java
index e2951dd077441fe9cda461a2d3ef0c0671308316..4c6dbe7e891b89862170c26bba9439465d3631b3 100644
--- a/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java
@@ -134,7 +134,7 @@ public class BambooStalkBlock extends Block implements BonemealableBlock {
     @Override
     protected void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
         if ((Integer) state.getValue(BambooStalkBlock.STAGE) == 0) {
-            if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && world.getRawBrightness(pos.above(), 0) >= 9) { // Spigot - SPIGOT-7159: Better modifier resolution
+            if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && (world.plutoConfig().bambooStalkIgnoreLightLevel || world.getRawBrightness(pos.above(), 0) >= 9)) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
                 int i = this.getHeightBelowUpToMax(world, pos) + 1;
 
                 if (i < world.paperConfig().maxGrowthHeight.bamboo.max) { // Paper - Configurable cactus/bamboo/reed growth height
diff --git a/src/main/java/net/minecraft/world/level/block/CropBlock.java b/src/main/java/net/minecraft/world/level/block/CropBlock.java
index 32291323266772fc177e753cba57228692dedd4d..642eb005edbcfc20aa2b58444e23c151b72f9a49 100644
--- a/src/main/java/net/minecraft/world/level/block/CropBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/CropBlock.java
@@ -77,7 +77,7 @@ public class CropBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     protected void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (world.getRawBrightness(pos, 0) >= 9) {
+        if (world.plutoConfig().cropIgnoreLightLevel || world.getRawBrightness(pos, 0) >= 9) { // Pluto - Toggle for light lookups on certain flora
             int i = this.getAge(state);
 
             if (i < this.getMaxAge()) {
@@ -173,7 +173,7 @@ public class CropBlock extends BushBlock implements BonemealableBlock {
     }
 
     protected static boolean hasSufficientLight(LevelReader world, BlockPos pos) {
-        return world.getRawBrightness(pos, 0) >= 8;
+        return (world instanceof ServerLevel serverLevel && serverLevel.plutoConfig().cropIgnoreLightLevel) || world.getRawBrightness(pos, 0) >= 8; // Pluto - Toggle for light lookups on certain flora
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/block/MushroomBlock.java b/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
index 1172d85c5c26ab2142343d91149766e5993cb36a..69d45ce5f44644ec511873726cd8ee312c0fb9b0 100644
--- a/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
@@ -95,7 +95,7 @@ public class MushroomBlock extends BushBlock implements BonemealableBlock {
         BlockPos blockposition1 = pos.below();
         BlockState iblockdata1 = world.getBlockState(blockposition1);
 
-        return iblockdata1.is(BlockTags.MUSHROOM_GROW_BLOCK) ? true : world.getRawBrightness(pos, 0) < 13 && this.mayPlaceOn(iblockdata1, world, blockposition1);
+        return iblockdata1.is(BlockTags.MUSHROOM_GROW_BLOCK) ? true : ((world instanceof ServerLevel serverLevel && serverLevel.plutoConfig().mushroomIgnoreLightLevel) || world.getRawBrightness(pos, 0) < 13) && this.mayPlaceOn(iblockdata1, world, blockposition1); // Pluto - Toggle for light lookups on certain flora
     }
 
     public boolean growMushroom(ServerLevel world, BlockPos pos, BlockState state, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java b/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java
index 13900abac8cb07cde8aa3198f723df057629f8a2..067cea44aa60d182354d0827766f6cd7fcd37065 100644
--- a/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java
@@ -146,7 +146,7 @@ public class PitcherCropBlock extends DoublePlantBlock implements BonemealableBl
     }
 
     private static boolean sufficientLight(LevelReader world, BlockPos pos) {
-        return CropBlock.hasSufficientLight(world, pos);
+        return (world instanceof ServerLevel serverLevel && serverLevel.plutoConfig().pitcherCropIgnoreLightLevel) || CropBlock.hasSufficientLight(world, pos); // Pluto - Toggle for light lookups on certain flora
     }
 
     private static boolean isLower(BlockState state) {
diff --git a/src/main/java/net/minecraft/world/level/block/SaplingBlock.java b/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
index d262a5a6da57ef9ba9a6fe0dfbc88f577105e74f..75420aaacfa33a9cd9604399df4664d0fa851de7 100644
--- a/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
@@ -55,7 +55,7 @@ public class SaplingBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     protected void randomTick(net.minecraft.world.level.block.state.BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (world.getMaxLocalRawBrightness(pos.above()) >= 9 && random.nextFloat() < (world.spigotConfig.saplingModifier / (100.0f * 7))) { // Spigot - SPIGOT-7159: Better modifier resolution
+        if ((world.plutoConfig().saplingIgnoreLightLevel || world.getMaxLocalRawBrightness(pos.above()) >= 9) && random.nextFloat() < (world.spigotConfig.saplingModifier / (100.0f * 7))) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
             this.advanceTree(world, pos, state, random);
         }
 
diff --git a/src/main/java/net/minecraft/world/level/block/StemBlock.java b/src/main/java/net/minecraft/world/level/block/StemBlock.java
index fb7c081e57e1f5aa26fd7d5c5fce99da885cb163..3643f4b1abfa04dd72ea9f2c3451c19e354649f6 100644
--- a/src/main/java/net/minecraft/world/level/block/StemBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/StemBlock.java
@@ -72,7 +72,7 @@ public class StemBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     protected void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (world.getRawBrightness(pos, 0) >= 9) {
+        if (world.plutoConfig().stemIgnoreLightLevel || world.getRawBrightness(pos, 0) >= 9) { // Pluto - Toggle for light lookups on certain flora
             float f = world.plutoConfig().useStaticGrowthSpeedStems ? world.plutoConfig().staticGrowthSpeedStems : CropBlock.getGrowthSpeed(this, world, pos); // Pluto - Static growth speeds
 
             if (random.nextFloat() < ((this == Blocks.PUMPKIN_STEM ? world.spigotConfig.pumpkinModifier : world.spigotConfig.melonModifier) / (100.0f * (Math.floor((25.0F / f) + 1))))) { // Spigot - SPIGOT-7159: Better modifier resolution
diff --git a/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java b/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java
index 6008c634c408c4eed563815da4d57b2eef69835c..1bff1ffa56fe0f7764df2bd122336a9094de71ea 100644
--- a/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java
@@ -74,7 +74,7 @@ public class SweetBerryBushBlock extends BushBlock implements BonemealableBlock
     protected void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
         int i = (Integer) state.getValue(SweetBerryBushBlock.AGE);
 
-        if (i < 3 && random.nextFloat() < (world.spigotConfig.sweetBerryModifier / (100.0f * 5)) && world.getRawBrightness(pos.above(), 0) >= 9) { // Spigot - SPIGOT-7159: Better modifier resolution
+        if (i < 3 && random.nextFloat() < (world.spigotConfig.sweetBerryModifier / (100.0f * 5)) && (world.plutoConfig().sweetBerryBushIgnoreLightLevel || world.getRawBrightness(pos.above(), 0) >= 9)) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
             BlockState iblockdata1 = (BlockState) state.setValue(SweetBerryBushBlock.AGE, i + 1);
 
             if (!CraftEventFactory.handleBlockGrowEvent(world, pos, iblockdata1, 2)) return; // CraftBukkit
