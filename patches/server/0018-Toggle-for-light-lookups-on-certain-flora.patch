From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Thu, 25 Jan 2024 13:09:20 -0800
Subject: [PATCH] Toggle for light lookups on certain flora

Pulled from my old 1.8/1.12 forks

diff --git a/src/main/java/dev/yive/pluto/PlutoConfig.java b/src/main/java/dev/yive/pluto/PlutoConfig.java
index 26f1264455c0a4e6c6ef244ac35cee902312487f..a879ba27f2801c250176fc439f41069a3e1f20c4 100644
--- a/src/main/java/dev/yive/pluto/PlutoConfig.java
+++ b/src/main/java/dev/yive/pluto/PlutoConfig.java
@@ -287,5 +287,24 @@ public class PlutoConfig {
             itemMergeMovingInterval = getInt("entities.item.merge-check-moving-interval", itemMergeMovingInterval);
             itemMergeStaticInterval = getInt("entities.item.merge-check-static-interval", itemMergeStaticInterval);
         }
+
+        public boolean cropIgnoreLightLevel = false;
+        public boolean mushroomIgnoreLightLevel = false;
+        public boolean stemIgnoreLightLevel = false;
+        public boolean bambooSaplingIgnoreLightLevel = false;
+        public boolean bambooStalkIgnoreLightLevel = false;
+        public boolean sweetBerryBushIgnoreLightLevel = false;
+        public boolean saplingIgnoreLightLevel = false;
+        public boolean pitcherCropIgnoreLightLevel = false;
+        private void ignoreLightLevels() {
+            cropIgnoreLightLevel = getBoolean("blocks.crops.ignore-light-level", cropIgnoreLightLevel);
+            mushroomIgnoreLightLevel = getBoolean("blocks.mushroom.ignore-light-level", mushroomIgnoreLightLevel);
+            stemIgnoreLightLevel = getBoolean("blocks.stems.ignore-light-level", stemIgnoreLightLevel);
+            bambooSaplingIgnoreLightLevel = getBoolean("blocks.bamboo-sapling.ignore-light-level", bambooSaplingIgnoreLightLevel);
+            bambooStalkIgnoreLightLevel = getBoolean("blocks.bamboo-stalk.ignore-light-level", bambooStalkIgnoreLightLevel);
+            sweetBerryBushIgnoreLightLevel = getBoolean("blocks.sweet-berry-bush.ignore-light-level", sweetBerryBushIgnoreLightLevel);
+            saplingIgnoreLightLevel = getBoolean("blocks.sapling.ignore-light-level", saplingIgnoreLightLevel);
+            pitcherCropIgnoreLightLevel = getBoolean("blocks.pitcher-plant.ignore-light-level", pitcherCropIgnoreLightLevel);
+        }
     }
 }
diff --git a/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java b/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java
index 8430f4ecee42e7112b7bafe04cec237b22dade88..6593a04817edf7cd781b6cb7904cf67716b9163a 100644
--- a/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/BambooSaplingBlock.java
@@ -45,7 +45,7 @@ public class BambooSaplingBlock extends Block implements BonemealableBlock {
 
     @Override
     public void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && world.getRawBrightness(pos.above(), 0) >= 9) { // Spigot - SPIGOT-7159: Better modifier resolution
+        if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && (world.plutoConfig().bambooSaplingIgnoreLightLevel || world.getRawBrightness(pos.above(), 0) >= 9)) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
             this.growBamboo(world, pos);
         }
 
diff --git a/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java b/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java
index e8dc4ea90d74036dacb0785fcb9125df192a4c22..f5526c664924f9c5e7aa3819c8681bae48064999 100644
--- a/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/BambooStalkBlock.java
@@ -134,7 +134,7 @@ public class BambooStalkBlock extends Block implements BonemealableBlock {
     @Override
     public void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
         if ((Integer) state.getValue(BambooStalkBlock.STAGE) == 0) {
-            if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && world.getRawBrightness(pos.above(), 0) >= 9) { // Spigot - SPIGOT-7159: Better modifier resolution
+            if (random.nextFloat() < (world.spigotConfig.bambooModifier / (100.0f * 3)) && world.isEmptyBlock(pos.above()) && (world.plutoConfig().bambooStalkIgnoreLightLevel || world.getRawBrightness(pos.above(), 0) >= 9)) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
                 int i = this.getHeightBelowUpToMax(world, pos) + 1;
 
                 if (i < world.paperConfig().maxGrowthHeight.bamboo.max) { // Paper - Configurable cactus/bamboo/reed growth height
diff --git a/src/main/java/net/minecraft/world/level/block/CropBlock.java b/src/main/java/net/minecraft/world/level/block/CropBlock.java
index 3cc092cf55e9ca7f1729dc26a2c2dbcf37cb48f9..b5cd67a078d0d6c04e2a8b0b147ec874bc970416 100644
--- a/src/main/java/net/minecraft/world/level/block/CropBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/CropBlock.java
@@ -77,7 +77,7 @@ public class CropBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     public void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (world.getRawBrightness(pos, 0) >= 9) {
+        if (world.plutoConfig().cropIgnoreLightLevel || world.getRawBrightness(pos, 0) >= 9) { // Pluto - Toggle for light lookups on certain flora
             int i = this.getAge(state);
 
             if (i < this.getMaxAge()) {
@@ -173,7 +173,7 @@ public class CropBlock extends BushBlock implements BonemealableBlock {
     }
 
     protected static boolean hasSufficientLight(LevelReader world, BlockPos pos) {
-        return world.getRawBrightness(pos, 0) >= 8;
+        return (world instanceof ServerLevel serverLevel && serverLevel.plutoConfig().cropIgnoreLightLevel) || world.getRawBrightness(pos, 0) >= 8; // Pluto - Toggle for light lookups on certain flora
     }
 
     @Override
diff --git a/src/main/java/net/minecraft/world/level/block/MushroomBlock.java b/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
index 1f27ae8abd5891a0b8057b454f2210b088b4e95a..183470e3adef6d9da25d7e723e3ad1ec662378eb 100644
--- a/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/MushroomBlock.java
@@ -95,7 +95,7 @@ public class MushroomBlock extends BushBlock implements BonemealableBlock {
         BlockPos blockposition1 = pos.below();
         BlockState iblockdata1 = world.getBlockState(blockposition1);
 
-        return iblockdata1.is(BlockTags.MUSHROOM_GROW_BLOCK) ? true : world.getRawBrightness(pos, 0) < 13 && this.mayPlaceOn(iblockdata1, world, blockposition1);
+        return iblockdata1.is(BlockTags.MUSHROOM_GROW_BLOCK) ? true : ((world instanceof ServerLevel serverLevel && serverLevel.plutoConfig().mushroomIgnoreLightLevel) || world.getRawBrightness(pos, 0) < 13) && this.mayPlaceOn(iblockdata1, world, blockposition1); // Pluto - Toggle for light lookups on certain flora
     }
 
     public boolean growMushroom(ServerLevel world, BlockPos pos, BlockState state, RandomSource random) {
diff --git a/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java b/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java
index 571d7e65d6ff54a20cbe676f1201742358b24401..bbab05ce403c98b3a244ec6ecc2a8d68eb19ee3a 100644
--- a/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/PitcherCropBlock.java
@@ -144,7 +144,7 @@ public class PitcherCropBlock extends DoublePlantBlock implements BonemealableBl
     }
 
     private static boolean sufficientLight(LevelReader world, BlockPos pos) {
-        return CropBlock.hasSufficientLight(world, pos);
+        return (world instanceof ServerLevel serverLevel && serverLevel.plutoConfig().pitcherCropIgnoreLightLevel) || CropBlock.hasSufficientLight(world, pos); // Pluto - Toggle for light lookups on certain flora
     }
 
     private static boolean isLower(BlockState state) {
diff --git a/src/main/java/net/minecraft/world/level/block/SaplingBlock.java b/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
index 3ff0d08e4964aae82d8e51d3b8bf9aa002096f81..a100215e8d2d832d2033c7a28875bf8abee97926 100644
--- a/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/SaplingBlock.java
@@ -55,7 +55,7 @@ public class SaplingBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     public void randomTick(net.minecraft.world.level.block.state.BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (world.getMaxLocalRawBrightness(pos.above()) >= 9 && random.nextFloat() < (world.spigotConfig.saplingModifier / (100.0f * 7))) { // Spigot - SPIGOT-7159: Better modifier resolution
+        if ((world.plutoConfig().saplingIgnoreLightLevel || world.getMaxLocalRawBrightness(pos.above()) >= 9) && random.nextFloat() < (world.spigotConfig.saplingModifier / (100.0f * 7))) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
             this.advanceTree(world, pos, state, random);
         }
 
diff --git a/src/main/java/net/minecraft/world/level/block/StemBlock.java b/src/main/java/net/minecraft/world/level/block/StemBlock.java
index 4494ac1e8fe44b9107150f6288de91bb6121ec14..4cce5320a831757191282e49b26717e0494e224c 100644
--- a/src/main/java/net/minecraft/world/level/block/StemBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/StemBlock.java
@@ -72,7 +72,7 @@ public class StemBlock extends BushBlock implements BonemealableBlock {
 
     @Override
     public void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
-        if (world.getRawBrightness(pos, 0) >= 9) {
+        if (world.plutoConfig().stemIgnoreLightLevel || world.getRawBrightness(pos, 0) >= 9) { // Pluto - Toggle for light lookups on certain flora
             float f = world.plutoConfig().useStaticGrowthSpeedStems ? world.plutoConfig().staticGrowthSpeedStems : CropBlock.getGrowthSpeed(this, world, pos); // Pluto - Static growth speeds
 
             if (random.nextFloat() < ((this == Blocks.PUMPKIN_STEM ? world.spigotConfig.pumpkinModifier : world.spigotConfig.melonModifier) / (100.0f * (Math.floor((25.0F / f) + 1))))) { // Spigot - SPIGOT-7159: Better modifier resolution
diff --git a/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java b/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java
index 62ed86114c1a6e724ccfea119a331356d0a22600..32d85631a81dc8ec07bebc82de2c43c49ad0c5e4 100644
--- a/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/SweetBerryBushBlock.java
@@ -72,7 +72,7 @@ public class SweetBerryBushBlock extends BushBlock implements BonemealableBlock
     public void randomTick(BlockState state, ServerLevel world, BlockPos pos, RandomSource random) {
         int i = (Integer) state.getValue(SweetBerryBushBlock.AGE);
 
-        if (i < 3 && random.nextFloat() < (world.spigotConfig.sweetBerryModifier / (100.0f * 5)) && world.getRawBrightness(pos.above(), 0) >= 9) { // Spigot - SPIGOT-7159: Better modifier resolution
+        if (i < 3 && random.nextFloat() < (world.spigotConfig.sweetBerryModifier / (100.0f * 5)) && (world.plutoConfig().sweetBerryBushIgnoreLightLevel || world.getRawBrightness(pos.above(), 0) >= 9)) { // Spigot - SPIGOT-7159: Better modifier resolution // Pluto - Toggle for light lookups on certain flora
             BlockState iblockdata1 = (BlockState) state.setValue(SweetBerryBushBlock.AGE, i + 1);
 
             if (!CraftEventFactory.handleBlockGrowEvent(world, pos, iblockdata1, 2)) return; // CraftBukkit
