From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Fri, 25 Jun 2021 09:21:09 -0700
Subject: [PATCH] Branding


diff --git a/build.gradle.kts b/build.gradle.kts
index e26f0ad6d12aabd7f26433812a4874c7f941665b..e3eefb91093e9ba94b10594c1b4bcce3cd67be5a 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -13,7 +13,7 @@ configurations.named(log4jPlugins.compileClasspathConfigurationName) {
 val alsoShade: Configuration by configurations.creating
 
 dependencies {
-    implementation(project(":pufferfish-api")) // Pufferfish // Paper
+    implementation(project(":pluto-api")) // Pluto - Branding // Pufferfish // Paper
     // Paper start
     implementation("org.jline:jline-terminal-jansi:3.21.0")
     implementation("net.minecrell:terminalconsoleappender:1.3.0")
@@ -100,14 +100,14 @@ tasks.jar {
         val gitBranch = git("rev-parse", "--abbrev-ref", "HEAD").getText().trim() // Paper
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Pufferfish", // Pufferfish
+            "Implementation-Title" to "Pluto", // Pufferfish // Pluto - Branding
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date, // Paper
-            "Specification-Title" to "Pufferfish", // Pufferfish
+            "Specification-Title" to "Pluto", // Pufferfish // Pluto - Branding
             "Specification-Version" to project.version,
-            "Specification-Vendor" to "Pufferfish Studios LLC", // Pufferfish
-            "Brand-Id" to "pufferfish:pufferfish", // Pufferfish
-            "Brand-Name" to "Pufferfish", // Pufferfish
+            "Specification-Vendor" to "Yive", // Pufferfish // Pluto - Branding
+            "Brand-Id" to "yive:pluto", // Pufferfish // Pluto - Branding
+            "Brand-Name" to "Pluto", // Pufferfish // Pluto - Branding
             "Build-Number" to (build ?: ""),
             "Build-Time" to Instant.now().toString(),
             "Git-Branch" to gitBranch, // Paper
diff --git a/src/main/java/com/destroystokyo/paper/Metrics.java b/src/main/java/com/destroystokyo/paper/Metrics.java
index 692c962193cf9fcc6801fc93f3220bdc673d527b..15bc3f3cb5bc1c4c545ba359a11a2b0c6c0b50d5 100644
--- a/src/main/java/com/destroystokyo/paper/Metrics.java
+++ b/src/main/java/com/destroystokyo/paper/Metrics.java
@@ -593,7 +593,7 @@ public class Metrics {
             boolean logFailedRequests = config.getBoolean("logFailedRequests", false);
             // Only start Metrics, if it's enabled in the config
             if (config.getBoolean("enabled", true)) {
-                Metrics metrics = new Metrics("Pufferfish", serverUUID, logFailedRequests, Bukkit.getLogger()); // Pufferfish
+                Metrics metrics = new Metrics("Pluto", serverUUID, logFailedRequests, Bukkit.getLogger()); // Pufferfish // Pluto - Branding
 
                 metrics.addCustomChart(new Metrics.SimplePie("minecraft_version", () -> {
                     String minecraftVersion = Bukkit.getVersion();
@@ -607,11 +607,11 @@ public class Metrics {
                 final String implVersion = org.bukkit.craftbukkit.Main.class.getPackage().getImplementationVersion();
                 if (implVersion != null) {
                     final String buildOrHash = implVersion.substring(implVersion.lastIndexOf('-') + 1);
-                    paperVersion = "git-Pufferfish-%s-%s".formatted(Bukkit.getServer().getMinecraftVersion(), buildOrHash); // Pufferfish
+                    paperVersion = "git-Pluto-%s-%s".formatted(Bukkit.getServer().getMinecraftVersion(), buildOrHash); // Pufferfish // Pluto - Branding
                 } else {
                     paperVersion = "unknown";
                 }
-                metrics.addCustomChart(new Metrics.SimplePie("pufferfish_version", () -> paperVersion)); // Pufferfish
+                metrics.addCustomChart(new Metrics.SimplePie("pluto_version", () -> paperVersion)); // Pufferfish // Pluto - Branding
 
                 metrics.addCustomChart(new Metrics.DrilldownPie("java_version", () -> {
                     Map<String, Map<String, Integer>> map = new HashMap<>();
diff --git a/src/main/java/gg/pufferfish/pufferfish/PufferfishVersionFetcher.java b/src/main/java/gg/pufferfish/pufferfish/PufferfishVersionFetcher.java
index 06323dcc745aed16123980fc559d7b65c42f1e1c..1e7121ddb9fb650d7dc5ffbefe4e3b157951d04d 100644
--- a/src/main/java/gg/pufferfish/pufferfish/PufferfishVersionFetcher.java
+++ b/src/main/java/gg/pufferfish/pufferfish/PufferfishVersionFetcher.java
@@ -28,11 +28,13 @@ import static net.kyori.adventure.text.format.NamedTextColor.RED;
 
 public class PufferfishVersionFetcher implements VersionFetcher {
 	
-	private static final Logger LOGGER = Logger.getLogger("PufferfishVersionFetcher");
+	private static final Logger LOGGER = Logger.getLogger("PlutoVersionFetcher"); // Pluto - Branding
 	private static final HttpClient client = HttpClient.newHttpClient();
-	
-	private static final URI JENKINS_URI = URI.create("https://ci.pufferfish.host/job/Pufferfish-1.21/lastSuccessfulBuild/buildNumber");
-	private static final String GITHUB_FORMAT = "https://api.github.com/repos/pufferfish-gg/Pufferfish/compare/ver/1.21...%s";
+
+	// Pluto start - Branding
+	private static final URI JENKINS_URI = URI.create("https://ci.yive.dev/job/Pluto/job/1.21/lastSuccessfulBuild/buildNumber");
+	private static final String GITHUB_FORMAT = "https://api.github.com/repos/Yive/Pluto/compare/ver/1.21...%s";
+	// Pluto end - Branding
 	
 	private static final HttpResponse.BodyHandler<JsonObject> JSON_OBJECT_BODY_HANDLER = responseInfo -> HttpResponse.BodySubscribers
 			.mapping(
@@ -108,7 +110,7 @@ public class PufferfishVersionFetcher implements VersionFetcher {
 	
 	private @NotNull Component getResponseMessage(final int versionDiff) {
 		return switch (Math.max(-1, Math.min(1, versionDiff))) {
-			case -1 -> text("You are running an unsupported version of Pufferfish.", RED);
+			case -1 -> text("You are running an unsupported version of Pluto.", RED); // Pluto - Branding
 			case 0 -> text("You are on the latest version!", GREEN);
 			default -> text("You are running " + versionDiff + " version" + (versionDiff == 1 ? "" : "s") + " behind. " +
 							"Please update your server when possible to maintain stability and security, and to receive the latest optimizations.",
diff --git a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
index 790bad0494454ca12ee152e3de6da3da634d9b20..30bb540941af11685d8f3f2913279b5dd89a0a67 100644
--- a/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
+++ b/src/main/java/io/papermc/paper/ServerBuildInfoImpl.java
@@ -32,6 +32,8 @@ public record ServerBuildInfoImpl(
 
     private static final String BRAND_PAPER_NAME = "Paper";
 
+    private static final String BRAND_PLUTO_NAME = "Pluto"; // Pluto - Branding
+
     private static final String BUILD_DEV = "DEV";
 
     public ServerBuildInfoImpl() {
@@ -42,9 +44,9 @@ public record ServerBuildInfoImpl(
         this(
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_ID)
                 .map(Key::key)
-                .orElse(BRAND_PAPER_ID),
+                .orElse(BRAND_PLUTO_ID), // Pluto - Branding
             getManifestAttribute(manifest, ATTRIBUTE_BRAND_NAME)
-                .orElse(BRAND_PAPER_NAME),
+                .orElse(BRAND_PLUTO_NAME), // Pluto - Branding
             SharedConstants.getCurrentVersion().getId(),
             SharedConstants.getCurrentVersion().getName(),
             getManifestAttribute(manifest, ATTRIBUTE_BUILD_NUMBER)
diff --git a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
index 80553face9c70c2a3d897681e7761df85b22d464..18077e79d664c60ec251599a29f4f148a22dc238 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/Versioning.java
@@ -11,7 +11,7 @@ public final class Versioning {
     public static String getBukkitVersion() {
         String result = "Unknown-Version";
 
-        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/gg.pufferfish.pufferfish/pufferfish-api/pom.properties"); // Pufferfish
+        InputStream stream = Bukkit.class.getClassLoader().getResourceAsStream("META-INF/maven/dev.yive.pluto/pluto-api/pom.properties"); // Pufferfish // Pluto - Branding
         Properties properties = new Properties();
 
         if (stream != null) {
