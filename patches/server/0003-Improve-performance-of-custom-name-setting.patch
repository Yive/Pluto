From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Sun, 8 Jan 2023 08:12:37 -0800
Subject: [PATCH] Improve performance of custom name setting


diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 57a0dbb23a32123d30c3b3572f4d129be9d97847..c8125bdfc75b4dd7bf81c353cf220589641a3acf 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -963,7 +963,7 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
             name = name.substring(0, 256);
         }
 
-        this.getHandle().setCustomName(CraftChatMessage.fromStringOrNull(name));
+        this.getHandle().setCustomName(CraftChatMessage.fromStringOrNull(name, false, true)); // Pluto - Improve performance of custom name setting
     }
 
     @Override
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
index 0f70be614f8f5350ad558d0ae645cdf0027e1e76..2a78e3f47545e229be1e8bfbb99d85aefc4e5240 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
@@ -43,6 +43,7 @@ public final class CraftChatMessage {
     }
 
     private static final class StringMessage {
+        private static final Pattern INCREMENTAL_PATTERN_NO_LINKS = Pattern.compile("(" + ChatColor.COLOR_CHAR + "[0-9a-fk-orx])|(\\n)", Pattern.CASE_INSENSITIVE); // Pluto - Improve performance of custom name setting
         private static final Pattern INCREMENTAL_PATTERN = Pattern.compile("(" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + "[0-9a-fk-orx])|((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " \\n]|$))))|(\\n)", Pattern.CASE_INSENSITIVE);
         // Separate pattern with no group 3, new lines are part of previous string
         private static final Pattern INCREMENTAL_PATTERN_KEEP_NEWLINES = Pattern.compile("(" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + "[0-9a-fk-orx])|((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " ]|$))))", Pattern.CASE_INSENSITIVE);
@@ -57,8 +58,13 @@ public final class CraftChatMessage {
         private int currentIndex;
         private StringBuilder hex;
         private final String message;
-
+        // Pluto start - Improve performance of custom name setting
         private StringMessage(String message, boolean keepNewlines, boolean plain) {
+            this(message, keepNewlines, plain, false);
+        }
+
+        private StringMessage(String message, boolean keepNewlines, boolean plain, boolean noLinks) {
+        // Pluto end - Improve performance of custom name setting
             this.message = message;
             if (message == null) {
                 this.output = new Component[]{this.currentChatComponent};
@@ -66,7 +72,7 @@ public final class CraftChatMessage {
             }
             this.list.add(currentChatComponent);
 
-            Matcher matcher = (keepNewlines ? StringMessage.INCREMENTAL_PATTERN_KEEP_NEWLINES : StringMessage.INCREMENTAL_PATTERN).matcher(message);
+            Matcher matcher = (noLinks ? StringMessage.INCREMENTAL_PATTERN_NO_LINKS : keepNewlines ? StringMessage.INCREMENTAL_PATTERN_KEEP_NEWLINES : StringMessage.INCREMENTAL_PATTERN).matcher(message); // Pluto - Improve performance of custom name setting
             String match = null;
             boolean needsAdd = false;
             boolean hasReset = false; // Paper
@@ -190,6 +196,12 @@ public final class CraftChatMessage {
         return (message == null || message.isEmpty()) ? null : CraftChatMessage.fromString(message, keepNewlines)[0];
     }
 
+    // Pluto start - Improve performance of custom name setting
+    public static Component fromStringOrNull(String message, boolean keepNewlines, boolean noLinks) {
+        return (message == null || message.isEmpty()) ? null : noLinks ? new StringMessage(message, keepNewlines, false, true).getOutput()[0] : CraftChatMessage.fromString(message, keepNewlines)[0];
+    }
+    // Pluto end - Improve performance of custom name setting
+
     public static Component[] fromString(String message) {
         return CraftChatMessage.fromString(message, false);
     }
