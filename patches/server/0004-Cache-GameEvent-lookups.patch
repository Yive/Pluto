From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Fri, 6 May 2022 15:29:09 -0700
Subject: [PATCH] Cache GameEvent lookups

This will build a cache of bukkit game events overtime as the lookup can be quite heavy with excessive vanilla game events being fired.

diff --git a/src/main/java/dev/yive/pluto/PlutoConfig.java b/src/main/java/dev/yive/pluto/PlutoConfig.java
index bc130bf79ba71102ae97e2daed5d5f3ea09f3a63..5f4ab8e9399875b7be6d3af54ed605bd89e3e5e0 100644
--- a/src/main/java/dev/yive/pluto/PlutoConfig.java
+++ b/src/main/java/dev/yive/pluto/PlutoConfig.java
@@ -192,5 +192,10 @@ public class PlutoConfig {
             this.worldDefaults.addDefault(path, Double.valueOf(dfl));
             return this.config.getDouble(path, this.worldDefaults.getDouble(path));
         }
+
+        public boolean useGameEventCache = true;
+        private void shouldUseGameEventCache() {
+            useGameEventCache = getBoolean("misc.use-game-events-cache", useGameEventCache);
+        }
     }
 }
diff --git a/src/main/java/net/minecraft/world/level/gameevent/GameEventDispatcher.java b/src/main/java/net/minecraft/world/level/gameevent/GameEventDispatcher.java
index f2d10d58617644a589ecec3e17358c1277795e5d..d1050058776aca2cf2c8797583947ee86c918c5a 100644
--- a/src/main/java/net/minecraft/world/level/gameevent/GameEventDispatcher.java
+++ b/src/main/java/net/minecraft/world/level/gameevent/GameEventDispatcher.java
@@ -26,17 +26,28 @@ public class GameEventDispatcher {
         this.level = world;
     }
 
+    private static final it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<String, org.bukkit.GameEvent> GAME_EVENT_CACHE = new it.unimi.dsi.fastutil.objects.Object2ObjectOpenHashMap<>(); // Pluto - Cache GameEvent lookups
     public void post(GameEvent event, Vec3 emitterPos, GameEvent.Context emitter) {
         int i = event.getNotificationRadius();
         BlockPos blockposition = BlockPos.containing(emitterPos);
+        // Pluto start - Cache GameEvent lookups
+        org.bukkit.GameEvent bukkitEvent;
+        if (this.level.plutoConfig().useGameEventCache) {
+            bukkitEvent = GAME_EVENT_CACHE.computeIfAbsent(event.getName(), s -> org.bukkit.GameEvent.getByKey(CraftNamespacedKey.fromMinecraft(BuiltInRegistries.GAME_EVENT.getKey(event))));
+        } else {
+            bukkitEvent = org.bukkit.GameEvent.getByKey(CraftNamespacedKey.fromMinecraft(BuiltInRegistries.GAME_EVENT.getKey(event)));
+        }
+        if (bukkitEvent != null) {
         // CraftBukkit start
-        GenericGameEvent event1 = new GenericGameEvent(org.bukkit.GameEvent.getByKey(CraftNamespacedKey.fromMinecraft(BuiltInRegistries.GAME_EVENT.getKey(event))), CraftLocation.toBukkit(blockposition, this.level.getWorld()), (emitter.sourceEntity() == null) ? null : emitter.sourceEntity().getBukkitEntity(), i, !Bukkit.isPrimaryThread());
+        GenericGameEvent event1 = new GenericGameEvent(bukkitEvent, CraftLocation.toBukkit(blockposition, this.level.getWorld()), (emitter.sourceEntity() == null) ? null : emitter.sourceEntity().getBukkitEntity(), i, !Bukkit.isPrimaryThread());
+        // Pluto end - Cache GameEvent lookups
         this.level.getCraftServer().getPluginManager().callEvent(event1);
         if (event1.isCancelled()) {
             return;
         }
         i = event1.getRadius();
         // CraftBukkit end
+        } // Pluto - Cache GameEvent lookups
         int j = SectionPos.blockToSectionCoord(blockposition.getX() - i);
         int k = SectionPos.blockToSectionCoord(blockposition.getY() - i);
         int l = SectionPos.blockToSectionCoord(blockposition.getZ() - i);
