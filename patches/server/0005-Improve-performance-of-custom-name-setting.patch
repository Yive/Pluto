From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Sun, 8 Jan 2023 08:12:37 -0800
Subject: [PATCH] Improve performance of custom name setting

Removes the regex for links when applying a custom name to an entity.
This can be a huge performance boost for certain plugins.

diff --git a/src/main/java/dev/yive/pluto/PlutoConfig.java b/src/main/java/dev/yive/pluto/PlutoConfig.java
index 5f4ab8e9399875b7be6d3af54ed605bd89e3e5e0..29192b350cb8638acf2c35480eb4ce603523f31e 100644
--- a/src/main/java/dev/yive/pluto/PlutoConfig.java
+++ b/src/main/java/dev/yive/pluto/PlutoConfig.java
@@ -197,5 +197,10 @@ public class PlutoConfig {
         private void shouldUseGameEventCache() {
             useGameEventCache = getBoolean("misc.use-game-events-cache", useGameEventCache);
         }
+
+        public boolean useCustomNameOptimisation = true;
+        private void shouldUseCustomNameOptimisation() {
+            useCustomNameOptimisation = getBoolean("entities.global.use-custom-name-api-optimisation", useCustomNameOptimisation);
+        }
     }
 }
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
index 1c3e1153d08b59d29b3613fc3b50a4780aa7a3ac..ee5b908958f68ee1e0828122ad36cb89b43fbb1f 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftEntity.java
@@ -645,6 +645,13 @@ public abstract class CraftEntity implements org.bukkit.entity.Entity {
             name = name.substring(0, 256);
         }
 
+        // Pluto start - Improve performance of custom name setting
+        if (this.getHandle().level().plutoConfig().useCustomNameOptimisation) {
+            this.getHandle().setCustomName(CraftChatMessage.fromStringOrNull(name, false, true));
+            return;
+        }
+        // Pluto end - Improve performance of custom name setting
+
         this.getHandle().setCustomName(CraftChatMessage.fromStringOrNull(name));
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
index 730d8e3cf2d9ca05b2d6219cf1856b8721871a37..0b21a50f97c6055ddde14f98b7395496def6a467 100644
--- a/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
+++ b/src/main/java/org/bukkit/craftbukkit/util/CraftChatMessage.java
@@ -42,6 +42,7 @@ public final class CraftChatMessage {
     }
 
     private static final class StringMessage {
+        private static final Pattern INCREMENTAL_PATTERN_NO_LINKS = Pattern.compile("(" + ChatColor.COLOR_CHAR + "[0-9a-fk-orx])|(\\n)", Pattern.CASE_INSENSITIVE); // Pluto - Improve performance of custom name setting
         private static final Pattern INCREMENTAL_PATTERN = Pattern.compile("(" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + "[0-9a-fk-orx])|((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " \\n]|$))))|(\\n)", Pattern.CASE_INSENSITIVE);
         // Separate pattern with no group 3, new lines are part of previous string
         private static final Pattern INCREMENTAL_PATTERN_KEEP_NEWLINES = Pattern.compile("(" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + "[0-9a-fk-orx])|((?:(?:https?):\\/\\/)?(?:[-\\w_\\.]{2,}\\.[a-z]{2,4}.*?(?=[\\.\\?!,;:]?(?:[" + String.valueOf(org.bukkit.ChatColor.COLOR_CHAR) + " ]|$))))", Pattern.CASE_INSENSITIVE);
@@ -58,6 +59,12 @@ public final class CraftChatMessage {
         private final String message;
 
         private StringMessage(String message, boolean keepNewlines, boolean plain) {
+        // Pluto start - Improve performance of custom name setting
+            this(message, keepNewlines, plain, false);
+        }
+
+        private StringMessage(String message, boolean keepNewlines, boolean plain, boolean noLinks) {
+        // Pluto end - Improve performance of custom name setting
             this.message = message;
             if (message == null) {
                 this.output = new Component[]{this.currentChatComponent};
@@ -65,7 +72,7 @@ public final class CraftChatMessage {
             }
             this.list.add(this.currentChatComponent);
 
-            Matcher matcher = (keepNewlines ? StringMessage.INCREMENTAL_PATTERN_KEEP_NEWLINES : StringMessage.INCREMENTAL_PATTERN).matcher(message);
+            Matcher matcher = (noLinks ? StringMessage.INCREMENTAL_PATTERN_NO_LINKS : keepNewlines ? StringMessage.INCREMENTAL_PATTERN_KEEP_NEWLINES : StringMessage.INCREMENTAL_PATTERN).matcher(message); // Pluto - Improve performance of custom name setting
             String match = null;
             boolean needsAdd = false;
             boolean hasReset = false; // Paper
@@ -189,6 +196,12 @@ public final class CraftChatMessage {
         return (message == null || message.isEmpty()) ? null : CraftChatMessage.fromString(message, keepNewlines)[0];
     }
 
+    // Pluto start - Improve performance of custom name setting
+    public static Component fromStringOrNull(String message, boolean keepNewlines, boolean noLinks) {
+        return (message == null || message.isEmpty()) ? null : noLinks ? new StringMessage(message, keepNewlines, false, true).getOutput()[0] : CraftChatMessage.fromString(message, keepNewlines)[0];
+    }
+    // Pluto end - Improve performance of custom name setting
+
     public static Component[] fromString(String message) {
         return CraftChatMessage.fromString(message, false);
     }
