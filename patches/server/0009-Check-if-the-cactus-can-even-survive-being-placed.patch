From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Tue, 11 Jul 2023 13:27:01 -0700
Subject: [PATCH] Check if the cactus can even survive being placed

Results at 3,000 randomTickSpeed and 24,448 cacti:

check-survival-before-growth - false & doTileDrop - true:  48mspt
check-survival-before-growth - true  & doTileDrop - true:  25mspt
check-survival-before-growth - false & doTileDrop - false: 18mspt
check-survival-before-growth - true  & doTileDrop - false:  6mspt

Setting the gamerule "doTileDrop" to false was to simulate a server that has chunk collectors.

Note: This might increase the item output of a cacti farm, though in theory it should act the same as vanilla.

diff --git a/src/main/java/dev/yive/pluto/PlutoConfig.java b/src/main/java/dev/yive/pluto/PlutoConfig.java
index 53bb437b419077cbc8ee75d05db73e4a59565612..a26a9020d51998bfd46995323655d6a4dbf739ab 100644
--- a/src/main/java/dev/yive/pluto/PlutoConfig.java
+++ b/src/main/java/dev/yive/pluto/PlutoConfig.java
@@ -229,5 +229,10 @@ public class PlutoConfig {
             alwaysMoistFarmland = getBoolean("blocks.farmland.always-moist", alwaysMoistFarmland);
             alwaysMoistSugarCane = getBoolean("blocks.sugarcane.always-moist", alwaysMoistSugarCane);
         }
+
+        public boolean cactusCheckSurvivalBeforeGrowth = false;
+        private void cactusCheckSurvivalBeforeGrowth() {
+            cactusCheckSurvivalBeforeGrowth = getBoolean("blocks.cactus.check-survival-before-growth", cactusCheckSurvivalBeforeGrowth);
+        }
     }
 }
diff --git a/src/main/java/net/minecraft/world/level/block/CactusBlock.java b/src/main/java/net/minecraft/world/level/block/CactusBlock.java
index a9629a102c4fa4e5720e63fcf4590e9231426c62..c55c9f778f5ced006a5351b359d17473594b123b 100644
--- a/src/main/java/net/minecraft/world/level/block/CactusBlock.java
+++ b/src/main/java/net/minecraft/world/level/block/CactusBlock.java
@@ -66,12 +66,30 @@ public class CactusBlock extends Block {
 
                 int modifier = world.spigotConfig.cactusModifier; // Spigot - SPIGOT-7159: Better modifier resolution
                 if (j >= 15 || (modifier != 100 && random.nextFloat() < (modifier / (100.0f * 16)))) { // Spigot - SPIGOT-7159: Better modifier resolution
+                    // Pluto start - Check if the cactus can even survive being placed
+                    if (world.plutoConfig().cactusCheckSurvivalBeforeGrowth && !canSurvive(world, blockposition1)) {
+                        world.levelEvent(2001, blockposition1, Block.getId(state));
+                        // We're going to fake the block breaking to match vanilla standards.
+                        // TODO: Check if it is worthwhile to cache the getDrops call, every cacti should have the same loot
+                        for (net.minecraft.world.item.ItemStack drop : Block.getDrops(state, world, pos, null)) { // Use base cactus since we don't place a block
+                            Block.popResource(world, blockposition1, drop);
+                        }
+                        world.setBlock(pos, state.setValue(CactusBlock.AGE, 0), 2 | 16);
+                        return;
+                    }
+                    // Pluto end - Check if the cactus can even survive being placed
                     CraftEventFactory.handleBlockGrowEvent(world, blockposition1, this.defaultBlockState()); // CraftBukkit
                     BlockState iblockdata1 = (BlockState) state.setValue(CactusBlock.AGE, 0);
 
                     world.setBlock(pos, iblockdata1, 4);
                     world.neighborChanged(iblockdata1, blockposition1, this, pos, false);
                 } else if (modifier == 100 || random.nextFloat() < (modifier / (100.0f * 16))) { // Spigot - SPIGOT-7159: Better modifier resolution
+                    // Pluto start - Check if the cactus can even survive being placed
+                    if (world.plutoConfig().cactusCheckSurvivalBeforeGrowth) {
+                        world.setBlock(pos, state.setValue(CactusBlock.AGE, j + 1), 2 | 16);
+                        return;
+                    }
+                    // Pluto end - Check if the cactus can even survive being placed
                     world.setBlock(pos, (BlockState) state.setValue(CactusBlock.AGE, j + 1), 4);
                 }
 
@@ -100,6 +118,12 @@ public class CactusBlock extends Block {
 
     @Override
     public boolean canSurvive(BlockState state, LevelReader world, BlockPos pos) {
+    // Pluto start - Check if the cactus can even survive being placed
+        return canSurvive(world, pos);
+    }
+
+    public final boolean canSurvive(LevelReader world, BlockPos pos) {
+    // Pluto end - Check if the cactus can even survive being placed
         Iterator iterator = Direction.Plane.HORIZONTAL.iterator();
 
         Direction enumdirection;
