From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Yive <6853318+Yive@users.noreply.github.com>
Date: Thu, 6 Jul 2023 08:07:46 -0700
Subject: [PATCH] Decrease vertical range for supporting block check


diff --git a/src/main/java/dev/yive/pluto/PlutoConfig.java b/src/main/java/dev/yive/pluto/PlutoConfig.java
index e83c3b330c3549abfea8de19b6aed2e02aafb9ef..59c046b5a8d803cbe142f04bdacbf506e7cec89f 100644
--- a/src/main/java/dev/yive/pluto/PlutoConfig.java
+++ b/src/main/java/dev/yive/pluto/PlutoConfig.java
@@ -207,5 +207,10 @@ public class PlutoConfig {
         private void shouldUseCustomNameOptimisation() {
             useCustomNameOptimisation = getBoolean("use-custom-name-api-optimisation", useCustomNameOptimisation);
         }
+
+        public boolean useSupportingBlockLookupOptimisation = true;
+        private void shouldUseSupportingBlockLookupOptimisation() {
+            useSupportingBlockLookupOptimisation = getBoolean("use-entity-supporting-block-lookup-optimisation", useSupportingBlockLookupOptimisation);
+        }
     }
 }
diff --git a/src/main/java/net/minecraft/world/level/BlockCollisions.java b/src/main/java/net/minecraft/world/level/BlockCollisions.java
index 1b6f72932fbdd567a1534bcf15e8a610b00f974d..c72e7431682eca3f0404520a7769d35c3f240abb 100644
--- a/src/main/java/net/minecraft/world/level/BlockCollisions.java
+++ b/src/main/java/net/minecraft/world/level/BlockCollisions.java
@@ -30,6 +30,12 @@ public class BlockCollisions<T> extends AbstractIterator<T> {
     private final BiFunction<BlockPos.MutableBlockPos, VoxelShape, T> resultProvider;
 
     public BlockCollisions(CollisionGetter world, @Nullable Entity entity, AABB box, boolean forEntity, BiFunction<BlockPos.MutableBlockPos, VoxelShape, T> resultFunction) {
+    // Pluto start - Decrease vertical range for supporting block check
+        this(world, entity, box, forEntity, resultFunction, false);
+    }
+
+    public BlockCollisions(CollisionGetter world, @Nullable Entity entity, AABB box, boolean forEntity, BiFunction<BlockPos.MutableBlockPos, VoxelShape, T> resultFunction, boolean shrinkVerticalRange) {
+    // Pluto end - Decrease vertical range for supporting block check
         this.context = entity == null ? CollisionContext.empty() : CollisionContext.of(entity);
         this.pos = new BlockPos.MutableBlockPos();
         this.entityShape = Shapes.create(box);
@@ -41,6 +47,12 @@ public class BlockCollisions<T> extends AbstractIterator<T> {
         int j = Mth.floor(box.maxX + 1.0E-7D) + 1;
         int k = Mth.floor(box.minY - 1.0E-7D) - 1;
         int l = Mth.floor(box.maxY + 1.0E-7D) + 1;
+        // Pluto start - Decrease vertical range for supporting block check
+        if (shrinkVerticalRange && entity != null && entity.level().plutoConfig().useSupportingBlockLookupOptimisation) {
+            k = Mth.floor(box.minY - 1.0E-7D);
+            l = Mth.floor(box.minY);
+        }
+        // Pluto end - Decrease vertical range for supporting block check
         int m = Mth.floor(box.minZ - 1.0E-7D) - 1;
         int n = Mth.floor(box.maxZ + 1.0E-7D) + 1;
         this.cursor = new Cursor3D(i, k, m, j, l, n);
diff --git a/src/main/java/net/minecraft/world/level/CollisionGetter.java b/src/main/java/net/minecraft/world/level/CollisionGetter.java
index c0dd933c8e64484c4ae0d4fa0f6e19969cf09b37..8ccd766513f2084ea00730f4c6f57ff0ffb4ff8f 100644
--- a/src/main/java/net/minecraft/world/level/CollisionGetter.java
+++ b/src/main/java/net/minecraft/world/level/CollisionGetter.java
@@ -105,7 +105,7 @@ public interface CollisionGetter extends BlockGetter {
         double d = Double.MAX_VALUE;
         BlockCollisions<BlockPos> blockCollisions = new BlockCollisions<>(this, entity, box, false, (pos, voxelShape) -> {
             return pos;
-        });
+        }, true); // Pluto - Decrease vertical range for supporting block check
 
         while(blockCollisions.hasNext()) {
             BlockPos blockPos2 = blockCollisions.next();
